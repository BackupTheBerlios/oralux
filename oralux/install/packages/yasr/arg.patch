diff -ur --exclude-from=nopatch.txt yasr-0.6.7/yasr/main.c yasr-0.6.7.arg/yasr/main.c
--- yasr-0.6.7/yasr/main.c	2005-06-11 18:10:21.000000000 +0200
+++ yasr-0.6.7.arg/yasr/main.c	2005-06-11 18:10:56.000000000 +0200
@@ -1291,6 +1291,9 @@
 {
   struct winsize winsz = { 0, 0 };
   int flag = 1;
+  int i = 0;
+  char option = 0;
+  int paramExpected = 0;  
 
   /* initialize gettext */
 #ifdef ENABLE_NLS
@@ -1317,36 +1320,84 @@
   (void) memset(&tts, 0, sizeof(Tts));
   opt_init();
   (void) memset(voices, 0, 128);
-  while (flag)
-  {
-    switch (getopt(argc, argv, "C:c:s:p:"))
+
+  for (i = 1; (i < argc) && flag; i++)
     {
-    case 'C':
-      conffile = strdup(optarg);
-      break;
-    case 'c':
-      argv[0] = "/bin/sh";
-      (void) execv(argv[0], argv);
-      break;
-    case 's':
-      (void) sprintf((char *) buf, "synthesizer=%s", optarg);
-      opt_read((char *) buf, 0);
-      cl_synth = 1;
-      break;
-    case 'p':
-      (void) sprintf((char *) buf, "synthesizer port=%s", optarg);
-      opt_read((char *) buf, 0);
-      cl_synthport = 1;
-      break;
+      char* arg = argv[i];
 
-    default:
-      flag = 0;
+      if (paramExpected)
+	{
+	  paramExpected = 0;
+	  if (arg[0] == '-')
+	    {
+	      // Erroneous parameter
+	      flag = 0;
+	    }
+	  else
+	    {
+	      switch (option)
+		{
+		case 'C':
+		  conffile = strdup(arg);
+		  break;
+		case 's':
+		  (void) sprintf((char *) buf, "synthesizer=%s", arg);
+		  opt_read((char *) buf, 0);
+		  cl_synth = 1;
+		  break;
+		case 'p':
+		  (void) sprintf((char *) buf, "synthesizer port=%s", arg);
+		  opt_read((char *) buf, 0);
+		  cl_synthport = 1;
+		  break;
+		default:
+		  flag = 0;
+		}
+	    }
+	}
+      else if ( (strlen(arg) == 2) && (arg[0] == '-'))
+	{
+	  switch (arg[1])
+	    {
+	    case 'C':      
+	    case 's':
+	    case 'p':
+	      option = arg[1];
+	      paramExpected = 1;
+	      break;
+	    case 'c':
+	      {
+		flag=0;
+		argv[0] = "/bin/sh";
+		argv[1]= "-c";
+		i++;
+		if (argc > 2)
+		  {
+		    int j=0;
+		    *buf = 0;
+		    for (;(i < argc) && (j < 256); i++)
+		      {
+			j=snprintf(buf+j, 256-j, "%s ",argv[i]);
+		      }
+		    argv[2] = buf;
+		    argv[3] = 0;
+		  }
+	      }
+	      (void) execv(argv[0], argv);
+	      break;
+	    default:
+	      // Erroneous option
+	      flag = 0;
+	      break;
+	    }
+	}
+      else
+	{ // program
+	  subprog = argv + i;
+	  flag = 0;
+	}
     }
-  }
-  if (argv[optind])
-  {
-    subprog = argv + optind;
-  }
+
   readconf();
 
 #if 0				/* this doesn't work */
